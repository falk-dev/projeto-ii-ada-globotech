# Importa a classe de orquestra√ß√£o que gerencia toda a l√≥gica do sistema
from orquestracao.orquestracao import SistemaAnaliseEngajamento

# Fun√ß√£o principal que roda o sistema
def main():
    # Caminho do CSV
    caminho_csv = "interacoes_globo.csv"

    # Instancia o sistema
    sistema = SistemaAnaliseEngajamento()

    # Carrega e processa os dados do CSV
    sistema.processar_interacoes_do_csv(caminho_csv)

    # Loop de menu interativo
    while True:
        print("\nMenu de op√ß√µes:\n")
        print("1. Listar plataformas cadastradas")
        print("2. Listar conte√∫dos cadastrados")
        print("3. Visualizar contagem por tipo de intera√ß√£o")
        print("4. Visualizar total de coment√°rios por conte√∫do")
        print("5. Relat√≥rio de engajamento por conte√∫do")
        print("6. Relat√≥rio de atividade dos usu√°rios")
        print("7. Top 5 conte√∫dos por tempo total de consumo")
        print("8. Sair")

        # Recebe a op√ß√£o do usu√°rio
        opcao = input("\nDigite a op√ß√£o desejada: ")

       # Gera os relat√≥rios
        if opcao == "1":
            # Lista todas as plataformas cadastradas
            plataformas = sistema_analise.listar_plataformas()
            print("\nüì° Plataformas cadastradas:")
            for p in plataformas:
                print("-", p)

        elif opcao == "2":
            # Lista todos os conte√∫dos registrados
            conteudos = list(sistema_analise._SistemaAnaliseEngajamento__conteudos_registrados.values())
            print("\nüé¨ Conte√∫dos cadastrados:")
            for c in conteudos:
                print(c)

        elif opcao == "3":
            # Mostra a contagem de intera√ß√µes por tipo para cada conte√∫do
            conteudos = list(sistema_analise._SistemaAnaliseEngajamento__conteudos_registrados.values())
            print("\nüìä Contagem por tipo de intera√ß√£o: \n")
            for c in conteudos:
                contagem = c.calcular_contagem_por_tipo_interacao()
                print(f"‚û°Ô∏è  {c.nome_conteudo}")
                for tipo, qtde in contagem.items():
                    simbolo = {
                        "view_start": "üëÄ",
                        "like": "‚ù§Ô∏è",
                        "comment": "üí¨",
                        "share": "ü§ù"
                    }.get(tipo, "‚ûï")
                    print(f"  {simbolo}  {tipo}: {qtde}")
                print("---------------------------------------")

        elif opcao == "4":
            # Mostra os coment√°rios feitos para cada conte√∫do
            conteudos = list(sistema_analise._SistemaAnaliseEngajamento__conteudos_registrados.values())
            print("\nüí¨ Total de coment√°rios por conte√∫do: \n")
            for c in conteudos:
                comentarios = c.listar_comentarios()
                if comentarios:
                    print(f"Coment√°rios do conte√∫do {c.id_conteudo}: {c.nome_conteudo}")
                    print(f"Total de coment√°rios: {len(comentarios)}")
                    for comentario in comentarios:
                        print(f"- {comentario}")
                    print()
                else:
                    print(f"{c.nome_conteudo} - Sem coment√°rios.\n")

        elif opcao == "5":
            # Gera relat√≥rio com o total de intera√ß√µes por conte√∫do
            print("\nüìä Relat√≥rio de Engajamento por Conte√∫do:")
            sistema.gerar_relatorio_engajamento_conteudos()

        elif opcao == "6":
            # Gera relat√≥rio com o n√∫mero de intera√ß√µes por usu√°rio
            print("\nüë• Relat√≥rio de Atividade dos Usu√°rios:")
            sistema.gerar_relatorio_atividade_usuarios()

        elif opcao == "7":
            # Mostra os top 5 conte√∫dos com maior tempo de consumo
            print("\nüèÜ Top 5 Conte√∫dos por Tempo Total de Consumo:")
            sistema.identificar_top_conteudos(metrica="tempo_total_consumo", n=5)

        elif opcao == "8":
            # Sai do programa
            print("Saindo...")
            break

        else:
            # Op√ß√£o inv√°lida digitada
            print("Op√ß√£o inv√°lida. Tente novamente.")

# Ponto de entrada principal do script
if __name__ == "__main__":
    main()